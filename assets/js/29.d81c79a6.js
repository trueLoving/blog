(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{369:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"基本认识"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本认识"}},[t._v("#")]),t._v(" 基本认识")]),t._v(" "),a("p",[a("code",[t._v("hoisting(变量提升)")]),t._v("，所描述的是JavaScript代码在运行中所产生的一种现象。")]),t._v(" "),a("p",[t._v("用简单的话来讲就是JavaScript引擎在运行JavaScript代码时会"),a("code",[t._v("先处理声明变量的代码，再从第一行执行代码")])]),t._v(" "),a("p",[t._v("hoisting产生的原因与JavaScript引擎解析JavaScript代码的机制有关，因此只有理解JavaScript引擎解析代码的机制才能明白hoisting")]),t._v(" "),a("h2",{attrs:{id:"引擎解析代码机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引擎解析代码机制"}},[t._v("#")]),t._v(" 引擎解析代码机制")]),t._v(" "),a("p",[t._v("引擎解析代码主要分为以下两步")]),t._v(" "),a("ol",[a("li",[t._v("预处理")]),t._v(" "),a("li",[t._v("执行代码")])]),t._v(" "),a("h4",{attrs:{id:"预处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预处理"}},[t._v("#")]),t._v(" 预处理")]),t._v(" "),a("p",[t._v("在这个阶段，引擎会通览代码，并遇到以下关键字（主要是声明变量的关键字）时会进行一些相关处理")]),t._v(" "),a("p",[a("strong",[t._v("主要关键字如下")])]),t._v(" "),a("ol",[a("li",[t._v("let")]),t._v(" "),a("li",[t._v("const")]),t._v(" "),a("li",[t._v("class")]),t._v(" "),a("li",[t._v("var")]),t._v(" "),a("li",[t._v("function")])]),t._v(" "),a("p",[t._v("当遇到这些关键字时，引擎会为每一个声明的变量在内存中创建一个独一无二的空间，并且会做一些相关处理。")]),t._v(" "),a("p",[t._v("例如当遇到用var声明的变量时会初始化定义为"),a("code",[t._v("undefined")]),t._v(",")]),t._v(" "),a("p",[t._v("而遇到let,const or class声明的变量时会标记该变量为"),a("code",[t._v("uninitialize")]),t._v("，且不可使用")]),t._v(" "),a("p",[t._v("而遇到函数定义时会先进行函数的定义")]),t._v(" "),a("p",[a("strong",[t._v("测试代码如下")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throw an error:Cannot access 'letA' before initialization   ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(letA);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" letA "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throw an error:Cannot access 'constA' before initialization  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(constA);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" constA "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throw an error:Cannot access 'classA' before initialization  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// console.log(classA);")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("classA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("varA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" varA "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fA()")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fA"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fA")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello fA"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("在这里提一下函数声明的三种方式\n1. new Function(例如var f = new Function(...args))\n2. 函数声明(例如f(){})\n3. 函数表达式(例如var f = function(){})\n其中，只有第二种方法声明的函数是支持hoisiting,其他声明是不支持hoisting\n")])])]),a("h4",{attrs:{id:"执行代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#执行代码"}},[t._v("#")]),t._v(" 执行代码")]),t._v(" "),a("p",[t._v("当JavaSript引擎执行完成第一步时，就开始进行第二步操作")]),t._v(" "),a("p",[t._v("从代码的第一行开始执行，按照代码执行流的顺序执行，遇到函数就跳入到函数执行，遇到异步代码就按照异步代码机制执行")]),t._v(" "),a("h2",{attrs:{id:"var-hoisting-vs-function-hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var-hoisting-vs-function-hoisting"}},[t._v("#")]),t._v(" var hoisting vs function hoisting")]),t._v(" "),a("p",[t._v("简而言之，函数提升大于变量提升")]),t._v(" "),a("p",[t._v("什么意思，以下面的代码作为例子说明")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ƒ a(){ // 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//   console.log("hello a");')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// }")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("在这里，我们分别使用var和function定义了一个同名的变量，而当我们打印该变量时发现打印出来的结果是function定义的变量")]),t._v(" "),a("p",[t._v("这个就说明了一个现象function定义变量的执行比var定义变量的执行要高,即"),a("code",[t._v("函数提升大于变量提升")])]),t._v(" "),a("h2",{attrs:{id:"let-const-hoisting"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let-const-hoisting"}},[t._v("#")]),t._v(" let&const hoisting")]),t._v(" "),a("p",[t._v("let/const/class声明的变量也有hoisting现象."),a("br"),t._v("\n只是与var/function处理的措施不同，let/const/class声明的变量只是被引擎处于标记为"),a("code",[t._v("uninitialize")]),t._v("，并没有为那些变量赋初始值。"),a("br"),t._v("\n在变量被声明和变量被真正初始化之间的这段时间被称为"),a("code",[t._v("temporal dead zone(临时死区)")]),t._v("。如果我们尝试在这段时间去访问这些变量，我们会得到一个变量引用错误的异常报错\n犹如下面例子")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// throw an error:Cannot access 'a' before initialization")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("因为变量a没有被初始化赋值，因此在我们访问该变量时会报异常错误说变量a没有被定义。")])])}),[],!1,null,null,null);s.default=e.exports}}]);